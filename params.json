{"body":"Revori - a revision-oriented DBMS\r\n=================================\r\n\r\n[![Build Status](https://travis-ci.org/ReadyTalk/revori.png?branch=master)](https://travis-ci.org/ReadyTalk/revori)\r\n\r\nRevori is a database management system designed to handle\r\nrapidly-changing data efficiently.  In addition to traditional\r\nrelational database queries, Revori supports query subscriptions\r\nwhich allow clients to retrieve the intial result of a query followed\r\nby a stream containing live updates to that result.\r\n\r\nThe design is a hybrid of a relational database management system and\r\na version control system.  A database is represented as an immutable\r\nrevision from which new revisions may be derived with data added,\r\nsubtracted, or replaced.  These revisions may be compared with each\r\nother and/or combined using a three-way merge algorithm.\r\n\r\nStatus\r\n------\r\n\r\nThe code is currently in an alpha state, meaning some stuff works,\r\nsome stuff doesn't, and the API is not yet thoroughly documented and\r\nmay change without warning.  If you're brave and want to start playing\r\nwith it anyway, you can build and browse the JavaDoc (run \"ant\r\njavadoc\") and consult the test/unittests directory for simple examples\r\nof how to use it.\r\n\r\nBuild\r\n-----\r\n\r\n#### Client\r\n\r\nYou'll need to have the libreadline headers and library installed to \r\nbuild the client)\r\n\r\n\t$ gradle client:build\r\n\r\n#### Server\r\n\r\n\t$ gradle build\r\n\r\n\r\n#### All\r\n\r\nIf you want to build it all, just execute:\r\n\r\n\t$ gradle\r\n\r\n\r\nRuntime\r\n-------\r\n\r\n#### Server\r\n\r\nThe following starts the Revori server, which listens to localhost:8017\r\n\r\n\t$ gradle start\r\n\r\n#### Client\r\n\r\nYou can use the SQL front-end client to test out Revori:\r\n\r\n\r\n\t$ ./client/build/binaries/client localhost 8017\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration.","name":"Revori","tagline":"A revision-oriented DBMS"}