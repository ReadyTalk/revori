buildscript {
  repositories {
    mavenCentral()
  }
}

apply plugin: 'java'
apply plugin: 'findbugs'
apply plugin: 'jacoco'

ext {
  mainClassName='com.readytalk.revori.server.SQLServer'
  serverPort='8017'
  serverHost='localhost'
}

repositories {
  mavenCentral()
}

dependencies {

  findbugs "com.google.code.findbugs:findbugs:${libVersions.findbugsVersion}"

  testCompile (
  	["junit:junit:${libVersions.junitVersion}"],
  	["org.mockito:mockito-all:${libVersions.mockitoVersion}"],
  )

  compile (
    ["com.google.code.findbugs:jsr305:${libVersions.findbugsVersion}"],
    ["com.google.code.findbugs:annotations:${libVersions.findbugsVersion}"],
    ["com.google.guava:guava:${libVersions.guavaVersion}"],
    ["org.slf4j:slf4j-api:${libVersions.slf4jVersion}"],
    ["javax.inject:javax.inject:1"],
  )

  runtime "ch.qos.logback:logback-classic:${libVersions.logbackVersion}"
}

jacocoTestReport {
  reports {
    html.enabled = true
    csv.enabled = true
    xml.enabled = true
  }
}

jacocoTestReport {
  dependsOn test
}

findbugs {
  ignoreFailures = true
}

task start dependsOn build {
  group = 'application'
  description = 'Start the Revori server.'

  doLast {
    ant.java(classname: mainClassName,
             classpath: runtimeClasspath.asPath,
             fork: true,
             spawn: true) {
      arg(value: serverHost)
      arg(value: serverPort)
    }
  }
}

task stop {
  group = 'application'
  description = 'Stop the Revori server.'

  doLast {
    ant.exec(executable: 'pkill') {
      arg(value: '-f')
      arg(value: mainClassName)
    }
  }
}
